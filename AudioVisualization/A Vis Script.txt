#Audio visualisation script
#
#Created by sirrandalot for Blender 2.71
#
#Feel free to modify this script to suit your needs

import bpy

#Iterate through however many bars you want
for i in range(0, 64):
    #Add a plane and set it's origin to one of its edges
    bpy.ops.mesh.primitive_plane_add(location = ((i + (i*0.5)), 0, 0))
    bpy.context.scene.cursor_location = bpy.context.active_object.location
    bpy.context.scene.cursor_location.y -= 1
    bpy.ops.object.origin_set(type='ORIGIN_CURSOR')
    
    #Scale the plane on the x and y axis, then apply the transformation
    bpy.context.active_object.scale.x = 0.5
    bpy.context.active_object.scale.y = 20
    bpy.ops.object.transform_apply(location=False, rotation=False, scale=True)
    
    #Insert a scaling keyframe and lock the x and z axis
    bpy.ops.anim.keyframe_insert_menu(type='Scaling')
    bpy.context.active_object.animation_data.action.fcurves[0].lock = True
    bpy.context.active_object.animation_data.action.fcurves[2].lock = True
    
    #Set the window context to the graph editor
    bpy.context.area.type = 'GRAPH_EDITOR'
    
    #Expression to determine the frequency range of the bars
    l = i**2 + 20
    h = (i+1)**2 + 20
    
    print(str(i) + ' ' + str(l) + ' ' + str(h))
    
    #Bake that range of frequencies to the current plane (along the y axis)
    bpy.ops.graph.sound_bake(filepath=r'C:\YOUR_PATH_HERE', low = (l), high = (h))
    
    #Lock the y axis
    bpy.context.active_object.animation_data.action.fcurves[1].lock = True